- name: Check for oh-my-zsh installation
  stat: "path=~/.oh-my-zsh"
  register: oh_my_zsh_stat

- name: Install oh-my-zsh
  raw: 'sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"'
  when: not oh_my_zsh_stat.stat.exists

- name: Zsh plugin - zsh-syntax-highlighting
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest: "{{ home }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"

- name: Zsh plugin - zsh-autosuggestions
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-autosuggestions.git
    dest: "{{ home }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"

- name: Zsh plugin - zsh-history-substring-search
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-history-substring-search.git
    dest: "{{ home }}/.oh-my-zsh/custom/plugins/zsh-history-substring-search"

- name: Install starship
  community.general.homebrew:
    name: starship
    state: present
  when: ansible_facts['os_family'] == 'Darwin'

- name: Check which zsh config files exist
  ansible.builtin.stat:
    path: "{{ home }}/{{ item }}"
  loop: "{{ zsh_config_files }}"
  register: zsh_stat_files

- name: Back up existing zsh config files
  command: mv "{{ home }}/{{ item.item }}" "{{ home }}/{{ item.item }}.bak"
  args:
    creates: "{{ home }}/{{ item.item }}.bak"
  when: item.stat.exists
  loop: "{{ zsh_stat_files.results }}"

- name: Symlink zsh config files
  ansible.builtin.file:
    src: "{{ role_path }}/files/{{ item }}"
    dest: "{{ home }}/{{ item }}"
    state: link
    force: yes
  loop: "{{ zsh_config_files }}"
