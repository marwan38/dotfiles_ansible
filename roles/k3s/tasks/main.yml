- name: "[kubernetes] install k3s"
  ansible.builtin.shell:
    cmd: "curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE=\"644\" sh -"
  when: ansible_facts.services['k3s'] is defined



- name: "[kubernetes] ansible.kubernetes host machine deps"
  become: yes
  ansible.builtin.apt:
    name: "python3-{{ item }}"
  with_items:
    - yaml

- name: Gather installed Helm version, if there is any
  shell: command -v helm >/dev/null 2>&1
  register: helm
  ignore_errors: yes
#
- name: "[kubernetes] install helm"
  ansible.builtin.shell:
    cmd: "curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 &&
          chmod 700 get_helm.sh &&
          ./get_helm.sh"
    chdir: /tmp
  with_items:
    - yaml
  when: "helm.failed == true"

- name: Add mojo2600/pihole-kubernetes chart repo
  kubernetes.core.helm_repository:
    name: mojo2600
    repo_url: "https://mojo2600.github.io/pihole-kubernetes"

- name: Deploy Pihole
  kubernetes.core.helm:
    name: pihole
    namespace: pihole
    create_namespace: true
    chart_ref: mojo2600/pihole
    values:
      ingress:
        enabled: true
        hosts:
          - pi.hole
          - pi.local
        annotations:
          traefik.http.middlewares.admin-replacepath.replacepath.path: /admin

      persistentVolumeClaim:
        enabled: true

      serviceDhcp:
        enabled: false

      serviceWeb:
        loadBalancerIP: 192.168.1.34
        annotations:
          metallb.universe.tf/allow-shared-ip: pihole-svc
        type: LoadBalancer
        http:
          port: 3000
        https:
          enabled: false

      serviceDns:
        loadBalancerIP: 192.168.1.34
        annotations:
          metallb.universe.tf/allow-shared-ip: pihole-svc
        type: LoadBalancer

      podDnsConfig:
        enabled: true
        policy: "None"
        nameservers:
        - 127.0.0.1
        - 1.1.1.1
